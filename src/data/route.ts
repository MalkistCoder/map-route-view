import type { LatLngBoundsExpression } from "leaflet"

export type RouteDestination = {
    lat: number,
    lng: number,
    name: string
}

export type Route = {
    fromIndex: number,
    toIndex: number,
    nodes: [number, number][],
    bounds: LatLngBoundsExpression
}

// The program I used to generate the paths game [lng,lat] coordinates instead of [lat,lng].
// This function switches them.
function switcharoo(lng: number, lat: number): [number, number] {
    return [lat, lng]
}

export const destinations = [
    {
        lat: -6.2277027,
        lng: 106.7980955,
        name: "Senayan City"
    },
    {
        lat: -6.225582,
        lng: 106.800502,
        name: "Plaza Senayan"
    },
    {
        lat: -6.218548,
        lng: 106.798560,
        name: "GBK Arena"
    }
]

export const routes: Route[] = [
    {
        fromIndex: 0,
        toIndex: 1,
        nodes: [
            [
                106.798162,
                -6.227703
            ],
            [
                106.798178,
                -6.227293
            ],
            [
                106.798224,
                -6.226961
            ],
            [
                106.798227,
                -6.226594
            ],
            [
                106.79824,
                -6.226195
            ],
            [
                106.798239,
                -6.224874
            ],
            [
                106.798219,
                -6.223487
            ],
            [
                106.798171,
                -6.222885
            ],
            [
                106.798122,
                -6.221601
            ],
            [
                106.798135,
                -6.221579
            ],
            [
                106.798155,
                -6.221565
            ],
            [
                106.798179,
                -6.22156
            ],
            [
                106.798199,
                -6.221564
            ],
            [
                106.798222,
                -6.221579
            ],
            [
                106.798235,
                -6.221603
            ],
            [
                106.798292,
                -6.222913
            ],
            [
                106.799221,
                -6.222933
            ],
            [
                106.799283,
                -6.223018
            ],
            [
                106.799768,
                -6.223691
            ],
            [
                106.800439,
                -6.224621
            ],
            [
                106.800829,
                -6.225163
            ],
            [
                106.800741,
                -6.22522
            ],
            [
                106.800612,
                -6.225287
            ],
            [
                106.800523,
                -6.225351
            ],
            [
                106.800507,
                -6.225385
            ],
            [
                106.800492,
                -6.225478
            ],
            [
                106.800491,
                -6.225585
            ],
            [
                106.800502,
                -6.225584
            ]
        ].map((v) => switcharoo(v[0], v[1])),
        bounds: [
            [ 106.798122, -6.22770 ],
            [ 106.800829, -6.22156 ],
        ]
    },
    {
        fromIndex: 1,
        toIndex: 2,
        nodes: [
            [
                106.800502,
                -6.225584
            ],
            [
                106.800883,
                -6.225551
            ],
            [
                106.800818,
                -6.225454
            ],
            [
                106.800492,
                -6.225478
            ],
            [
                106.80049,
                -6.22614
            ],
            [
                106.800979,
                -6.226118
            ],
            [
                106.801119,
                -6.226209
            ],
            [
                106.801234,
                -6.226116
            ],
            [
                106.801342,
                -6.225995
            ],
            [
                106.800994,
                -6.225504
            ],
            [
                106.802046,
                -6.224748
            ],
            [
                106.801656,
                -6.224216
            ],
            [
                106.80161,
                -6.224175
            ],
            [
                106.801298,
                -6.223741
            ],
            [
                106.800968,
                -6.223366
            ],
            [
                106.800644,
                -6.222905
            ],
            [
                106.800641,
                -6.222883
            ],
            [
                106.800653,
                -6.222854
            ],
            [
                106.800792,
                -6.222693
            ],
            [
                106.800115,
                -6.22235
            ],
            [
                106.799867,
                -6.222208
            ],
            [
                106.800253,
                -6.221662
            ],
            [
                106.800258,
                -6.221582
            ],
            [
                106.798693,
                -6.220949
            ],
            [
                106.798199,
                -6.220731
            ],
            [
                106.798166,
                -6.220688
            ],
            [
                106.798109,
                -6.220557
            ],
            [
                106.798093,
                -6.220413
            ],
            [
                106.798093,
                -6.220287
            ],
            [
                106.798076,
                -6.220095
            ],
            [
                106.798094,
                -6.218955
            ],
            [
                106.798092,
                -6.218664
            ],
            [
                106.798122,
                -6.217435
            ],
            [
                106.798116,
                -6.216939
            ],
            [
                106.798079,
                -6.216074
            ],
            [
                106.798003,
                -6.215252
            ],
            [
                106.79798,
                -6.214714
            ],
            [
                106.79803,
                -6.214585
            ],
            [
                106.798048,
                -6.214575
            ],
            [
                106.798073,
                -6.214573
            ],
            [
                106.798089,
                -6.21459
            ],
            [
                106.798113,
                -6.214862
            ],
            [
                106.798139,
                -6.214948
            ],
            [
                106.798206,
                -6.215592
            ],
            [
                106.798248,
                -6.216467
            ],
            [
                106.798285,
                -6.218096
            ],
            [
                106.798458,
                -6.218208
            ],
            [
                106.798504,
                -6.218249
            ],
            [
                106.798532,
                -6.218292
            ],
            [
                106.798552,
                -6.21837
            ],
            [
                106.798547,
                -6.218549
            ],
            [
                106.79856,
                -6.218549
            ]
        ].map((v) => switcharoo(v[0], v[1])),
        bounds: [
            [-6.226209, 106.79798 ],
            [-6.214573, 106.80207 ],
        ]
    }
]
